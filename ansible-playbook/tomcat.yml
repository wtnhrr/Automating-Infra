---
- hosts: tomcat
  become: yes
  
  vars_files:
    - vars/tomcat_vars.yml

  tasks:
    - name: Set environment variables for Tomcat
      command: >
        docker update --env-add DB_USER={{ postgresql_user }}
                      --env-add DB_PASSWORD={{ postgresql_password }}
                      --env-add DB_HOST={{ postgresql_host }}
                      --env-add DB_PORT={{ postgresql_port }}
                      --env-add DB_NAME={{ postgresql_db }}
                      tomcat-container

    - name: Create a Tomcat Group
      group: name=tomcat

    - name: Create a Tomcat User
      user: name=tomcat group=tomcat home=/usr/local/tomcat createhome=no 

    - name: Ajustar permiss√µes do Tomcat
      file:
        path: "{{ tomcat_install_dir }}"
        state: directory
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        recurse: yes
      tags:
        - config

    - name: Change ownership of tomcat
      file: path={{ tomcat_install_dir }} owner={{ tomcat_user }} group={{ tomcat_group }} state=directory recurse=yes

    - name: configure tomcat user
      command: docker cp files/tomcat-users.xml tomcat-container:/usr/local/tomcat/conf/tomcat-users.xml
      notify:
        - Restart Tomcat

    - name: Copy Tomcat Manager to the correct path
      command: docker exec tomcat-container bash -c "cp -r /usr/local/tomcat/webapps.dist/* /usr/local/tomcat/webapps/"
      notify:
      - Restart Tomcat

    - name: copy context.xml
      command: docker cp files/context.xml tomcat-container:/usr/local/tomcat/webapps/manager/META-INF/context.xml
      notify:
        - Restart Tomcat

    - name: Copy .war file to Tomcat
      command: docker cp apps/myapp.war tomcat-container:/usr/local/tomcat/webapps/myapp.war
      notify:
        - Restart Tomcat

  handlers:
    - name: Restart Tomcat
      command: docker exec tomcat-container /usr/local/tomcat/bin/shutdown.sh && docker exec tomcat-container /usr/local/tomcat/bin/startup.sh
      tags:
        - restart